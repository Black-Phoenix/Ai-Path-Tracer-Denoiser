// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: caffe2/proto/caffe2_legacy.proto

#ifndef PROTOBUF_INCLUDED_caffe2_2fproto_2fcaffe2_5flegacy_2eproto
#define PROTOBUF_INCLUDED_caffe2_2fproto_2fcaffe2_5flegacy_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_caffe2_2fproto_2fcaffe2_5flegacy_2eproto CAFFE2_API

namespace protobuf_caffe2_2fproto_2fcaffe2_5flegacy_2eproto {
// Internal implementation detail -- do not use these members.
struct CAFFE2_API TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void CAFFE2_API AddDescriptors();
}  // namespace protobuf_caffe2_2fproto_2fcaffe2_5flegacy_2eproto
namespace caffe2 { const ::std::string& GetEmptyStringAlreadyInited(); 
class CaffeDatum;
class CaffeDatumDefaultTypeInternal;
CAFFE2_API extern CaffeDatumDefaultTypeInternal _CaffeDatum_default_instance_;
}  // namespace caffe2
namespace google {
namespace protobuf {
template<> CAFFE2_API ::caffe2::CaffeDatum* Arena::CreateMaybeMessage<::caffe2::CaffeDatum>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace caffe2 {

enum LegacyPadding {
  NOTSET = 0,
  VALID = 1,
  SAME = 2,
  CAFFE_LEGACY_POOLING = 3
};
CAFFE2_API bool LegacyPadding_IsValid(int value);
const LegacyPadding LegacyPadding_MIN = NOTSET;
const LegacyPadding LegacyPadding_MAX = CAFFE_LEGACY_POOLING;
const int LegacyPadding_ARRAYSIZE = LegacyPadding_MAX + 1;

CAFFE2_API const ::google::protobuf::EnumDescriptor* LegacyPadding_descriptor();
inline const ::std::string& LegacyPadding_Name(LegacyPadding value) {
  return ::google::protobuf::internal::NameOfEnum(
    LegacyPadding_descriptor(), value);
}
inline bool LegacyPadding_Parse(
    const ::std::string& name, LegacyPadding* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LegacyPadding>(
    LegacyPadding_descriptor(), name, value);
}
// ===================================================================

class CAFFE2_API CaffeDatum : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:caffe2.CaffeDatum) */ {
 public:
  CaffeDatum();
  virtual ~CaffeDatum();

  CaffeDatum(const CaffeDatum& from);

  inline CaffeDatum& operator=(const CaffeDatum& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CaffeDatum(CaffeDatum&& from) noexcept
    : CaffeDatum() {
    *this = ::std::move(from);
  }

  inline CaffeDatum& operator=(CaffeDatum&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CaffeDatum& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CaffeDatum* internal_default_instance() {
    return reinterpret_cast<const CaffeDatum*>(
               &_CaffeDatum_default_instance_);
  }
  static int const kIndexInFileMessages =
    0;

  void Swap(CaffeDatum* other);
  friend void swap(CaffeDatum& a, CaffeDatum& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CaffeDatum* New() const final {
    return CreateMaybeMessage<CaffeDatum>(NULL);
  }

  CaffeDatum* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CaffeDatum>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CaffeDatum& from);
  void MergeFrom(const CaffeDatum& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CaffeDatum* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float float_data = 6;
  int float_data_size() const;
  void clear_float_data();
  static const int kFloatDataFieldNumber = 6;
  float float_data(int index) const;
  void set_float_data(int index, float value);
  void add_float_data(float value);
  const ::google::protobuf::RepeatedField< float >&
      float_data() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_float_data();

  // optional bytes data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional int32 channels = 1;
  bool has_channels() const;
  void clear_channels();
  static const int kChannelsFieldNumber = 1;
  ::google::protobuf::int32 channels() const;
  void set_channels(::google::protobuf::int32 value);

  // optional int32 height = 2;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // optional int32 width = 3;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // optional int32 label = 5;
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 5;
  ::google::protobuf::int32 label() const;
  void set_label(::google::protobuf::int32 value);

  // optional bool encoded = 7 [default = false];
  bool has_encoded() const;
  void clear_encoded();
  static const int kEncodedFieldNumber = 7;
  bool encoded() const;
  void set_encoded(bool value);

  // @@protoc_insertion_point(class_scope:caffe2.CaffeDatum)
 private:
  void set_has_channels();
  void clear_has_channels();
  void set_has_height();
  void clear_has_height();
  void set_has_width();
  void clear_has_width();
  void set_has_data();
  void clear_has_data();
  void set_has_label();
  void clear_has_label();
  void set_has_encoded();
  void clear_has_encoded();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< float > float_data_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 channels_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 label_;
  bool encoded_;
  friend struct ::protobuf_caffe2_2fproto_2fcaffe2_5flegacy_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CaffeDatum

// optional int32 channels = 1;
inline bool CaffeDatum::has_channels() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CaffeDatum::set_has_channels() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CaffeDatum::clear_has_channels() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CaffeDatum::clear_channels() {
  channels_ = 0;
  clear_has_channels();
}
inline ::google::protobuf::int32 CaffeDatum::channels() const {
  // @@protoc_insertion_point(field_get:caffe2.CaffeDatum.channels)
  return channels_;
}
inline void CaffeDatum::set_channels(::google::protobuf::int32 value) {
  set_has_channels();
  channels_ = value;
  // @@protoc_insertion_point(field_set:caffe2.CaffeDatum.channels)
}

// optional int32 height = 2;
inline bool CaffeDatum::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CaffeDatum::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CaffeDatum::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CaffeDatum::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 CaffeDatum::height() const {
  // @@protoc_insertion_point(field_get:caffe2.CaffeDatum.height)
  return height_;
}
inline void CaffeDatum::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:caffe2.CaffeDatum.height)
}

// optional int32 width = 3;
inline bool CaffeDatum::has_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CaffeDatum::set_has_width() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CaffeDatum::clear_has_width() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CaffeDatum::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 CaffeDatum::width() const {
  // @@protoc_insertion_point(field_get:caffe2.CaffeDatum.width)
  return width_;
}
inline void CaffeDatum::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:caffe2.CaffeDatum.width)
}

// optional bytes data = 4;
inline bool CaffeDatum::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CaffeDatum::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CaffeDatum::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CaffeDatum::clear_data() {
  data_.ClearToEmptyNoArena(&GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& CaffeDatum::data() const {
  // @@protoc_insertion_point(field_get:caffe2.CaffeDatum.data)
  return data_.GetNoArena();
}
inline void CaffeDatum::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:caffe2.CaffeDatum.data)
}
#if LANG_CXX11
inline void CaffeDatum::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:caffe2.CaffeDatum.data)
}
#endif
inline void CaffeDatum::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:caffe2.CaffeDatum.data)
}
inline void CaffeDatum::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:caffe2.CaffeDatum.data)
}
inline ::std::string* CaffeDatum::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:caffe2.CaffeDatum.data)
  return data_.MutableNoArena(&GetEmptyStringAlreadyInited());
}
inline ::std::string* CaffeDatum::release_data() {
  // @@protoc_insertion_point(field_release:caffe2.CaffeDatum.data)
  if (!has_data()) {
    return NULL;
  }
  clear_has_data();
  return data_.ReleaseNonDefaultNoArena(&GetEmptyStringAlreadyInited());
}
inline void CaffeDatum::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:caffe2.CaffeDatum.data)
}

// optional int32 label = 5;
inline bool CaffeDatum::has_label() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CaffeDatum::set_has_label() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CaffeDatum::clear_has_label() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CaffeDatum::clear_label() {
  label_ = 0;
  clear_has_label();
}
inline ::google::protobuf::int32 CaffeDatum::label() const {
  // @@protoc_insertion_point(field_get:caffe2.CaffeDatum.label)
  return label_;
}
inline void CaffeDatum::set_label(::google::protobuf::int32 value) {
  set_has_label();
  label_ = value;
  // @@protoc_insertion_point(field_set:caffe2.CaffeDatum.label)
}

// repeated float float_data = 6;
inline int CaffeDatum::float_data_size() const {
  return float_data_.size();
}
inline void CaffeDatum::clear_float_data() {
  float_data_.Clear();
}
inline float CaffeDatum::float_data(int index) const {
  // @@protoc_insertion_point(field_get:caffe2.CaffeDatum.float_data)
  return float_data_.Get(index);
}
inline void CaffeDatum::set_float_data(int index, float value) {
  float_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:caffe2.CaffeDatum.float_data)
}
inline void CaffeDatum::add_float_data(float value) {
  float_data_.Add(value);
  // @@protoc_insertion_point(field_add:caffe2.CaffeDatum.float_data)
}
inline const ::google::protobuf::RepeatedField< float >&
CaffeDatum::float_data() const {
  // @@protoc_insertion_point(field_list:caffe2.CaffeDatum.float_data)
  return float_data_;
}
inline ::google::protobuf::RepeatedField< float >*
CaffeDatum::mutable_float_data() {
  // @@protoc_insertion_point(field_mutable_list:caffe2.CaffeDatum.float_data)
  return &float_data_;
}

// optional bool encoded = 7 [default = false];
inline bool CaffeDatum::has_encoded() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CaffeDatum::set_has_encoded() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CaffeDatum::clear_has_encoded() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CaffeDatum::clear_encoded() {
  encoded_ = false;
  clear_has_encoded();
}
inline bool CaffeDatum::encoded() const {
  // @@protoc_insertion_point(field_get:caffe2.CaffeDatum.encoded)
  return encoded_;
}
inline void CaffeDatum::set_encoded(bool value) {
  set_has_encoded();
  encoded_ = value;
  // @@protoc_insertion_point(field_set:caffe2.CaffeDatum.encoded)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace caffe2

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::caffe2::LegacyPadding> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::caffe2::LegacyPadding>() {
  return ::caffe2::LegacyPadding_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_caffe2_2fproto_2fcaffe2_5flegacy_2eproto
